package utils

import (
	"log"
	"os"

	"github.com/caarlos0/env/v6"
	"github.com/joho/godotenv"
	"go.uber.org/zap"
)


type Configuration struct {
	//
	AppEnv      string `env:"APP_ENV"`
	LogLevel    string `env:"LOG_LEVEL"`
	RunningMode string `env:"RUNNING_MODE"` //fallback or main
	DBName		string `env:"DB_NAME"`
	DBUsername	string `env:"DB_USERNAME"`
	DBPassword	string `env:"DB_PASSWORD"`
	DBHost		string `env:"DB_HOST"`
	DBPort		string `env:"DB_PORT"`
	//
}

func GetEnvConfig(log *zap.SugaredLogger) *Configuration {
	setupEnv(log)
	cfg := Configuration{}
	if err := env.Parse(&cfg); err != nil {
		fmt.Printf("%+v\n", err)
	}
	log.Infof("Configuration loaded ", cfg.AppEnv)
	return &cfg
}

func setupEnv(log *zap.SugaredLogger) {
	env := os.Getenv("APP_ENV")
	log.Infof("Configuration loading ", env)
	if env == "local" || env == "dev" || env == "staging" || env == "prod" {
		err := godotenv.Load(fmt.Sprintf("./env/.env.%s", env))
		if err != nil {
			log.Debug("Error loading .env file")
		}
		return
	}
	godotenv.Load()
}